[
	{
		"id": "java-application-security-1",
		"question": "How do you retrieve the authentication user from the SecurityContextHolder?",
		"correct_answer": "<div class=\"codeAnswer\">SecurityContextHolder.getContext().getAuthentication()</div>",
		"incorrect_answers": [
			"<div class=\"codeAnswer\">SecurityContextHolder.get().getAuthentication()</div>",
			"<div class=\"codeAnswer\">SecurityContextHolder.getSecurityContext().getAuthentication()</div>",
			"<div class=\"codeAnswer\">SecurityContextHolder.getAuthentication()</div>"
		],
		"source": ""
	},
	{
		"id": "java-application-security-2",
		"question": "You discovered an XXE vulnerability, after which you implement an EntityResolver that returns null for all external entities. Upon retest, the application remains vulnerable. Why was the solution incorrect?",
		"correct_answer": "When an EntityResolver returns null, the parser uses default behavior and opens a connection to the URI.",
		"incorrect_answers": [
			"The EntityResolver was not set on the XMLReader.",
			"The EntityResolver was not set on the XML parser.",
			"EntityResolvers cannot be used to mitigate XXE attacks."
		],
		"source": ""
	},
	{
		"id": "java-application-security-3",
		"question": "An application, for convenience, granted AllPermission to the entire application. How would you programmatically reduce the permissions of a serializable object while deserializing untrusted members?",
		"correct_answer": "Implement readObject, wrap calls to ObjectInputStream#readObject in an AccessControl#doPrivileged block for each untrusted member, and pass an AccessControlContext that has only the needed Permissions in its ProtectionDomain",
		"incorrect_answers": [
			"Implement readObject, wrap calls to ObjectInputStream#readObject in an AccessControl#doPrivileged block for each untrusted member, and pass a null AccessControlContext in addition to the list of needed Permissions",
			"Implement readObject, wrap calls to ObjectInputStream#readObject in an AccessControl#doPrivileged block for each untrusted member, and pass the list of needed Permissions",
			"Implement readObject and check SecurityManager#checkPermission to ensure that the class has the necessary permission for each untrusted member"
		],
		"source": ""
	},
	{
		"id": "java-application-security-4",
		"question": "How might an attacker exploit the following?<div class=\"code\"><p>public static Field getField(Class<?> clazz, String fieldName) {</p><p>&nbsp; return doPrivileged(() -> {</p><p>&nbsp; &nbsp; Field field = clazz.getDeclaredField(fieldName);</p><p>&nbsp; &nbsp; field.setAccessible(true);</p><p>&nbsp; &nbsp; return field;</p><p>&nbsp; });</p><p>}</p></div>",
		"correct_answer": "By using the following to change the SecurityManager: <div class=\"codeAnswer\">getField(System.class, \"security\").set(null, badSecurityManager);</div>",
		"incorrect_answers": [
			"By using the following to force garbage collection: <div class=\"codeAnswer\">getField(System.class, \"gc\").invoke(null);</div>",
			"By using the following to shutdown the VM: <div class=\"codeAnswer\">getField(System.class, \"exit\").invoke(null, 0);</div>",
			"By using the following to change standard out: <div class=\"codeAnswer\">getField(System.class, \"out\").set(null, badStandardOut);</div>"
		],
		"source": ""
	},
	{
		"id": "java-application-security-5",
		"question": "You populate an online form with the date November 6, 2021. The server performs the following operations:<div class=\"code\"><p>LocalDate loc = LocalDate.of(2021, 11, 6);</p><p>DateTimeFormatter form = DateTimeFormatter.ofLocalizedDate(FormatStyle.SHORT);</p><p>String output = form.format(loc);</p> The expected output is 11/6/21, but the result is 6/11/21. What is the issue?",
		"correct_answer": "The system default locale is incorrect.",
		"incorrect_answers": [
			"The parameters for LocalDate.of are incorrect.",
			"The date format is incorrect.",
			"The system time on the server is off."
		],
		"source": ""
	},
	{
		"id": "java-application-security-6",
		"question": "Once authentication is successful, the application runs the following set of instructions:<div class=\"code\"><p>String redirectTo = request.getParameter(\"redirect_to\");</p><p>response.sendRedirect(redirectTo);</p></div>How might an attacker exploit the instructions?",
		"correct_answer": "In a phishing attack with Open Redirect",
		"incorrect_answers": [
			"In a phishing attack with XSS",
			"It cannot be exploited unless the user is also vulnerable to XSS, in which case a standard phishing attack would apply",
			"In a phishing attack with Response Splitting"
		],
		"source": ""
	},
	{
		"id": "java-application-security-7",
		"question": "Which vulnerability is unrelated to string concatenation of untrusted strings?",
		"correct_answer": "Weak Encryption",
		"incorrect_answers": [
			"SQL Injection",
			"Cross-site Scripting",
			"Command Injection"
		],
		"source": ""
	},
	{
		"id": "java-application-security-8",
		"question": "<p>An application uses a signed cookie for user authentication. Before the data within the cookie is trusted on subsequent requests, it validates via the following process:</p><p>1. Read the URL of the signer's public key from the cookie,</p><p>2. Download the signer's public key from the URL, and</p><p>3. Use the public key to verify the signature</p><p>What is incorrect about the validation process?</p>",
		"correct_answer": "It is possible to forge the cookie by signing with your own private key and modifying the public key URL",
		"incorrect_answers": [
			"The signed cookie should include the public key to reduce the number of network connections.",
			"Only HTTPS URLs should be accepted for the public key to protect against on-path attacks.",
			"Signatures cannot be used to verify identities."
		],
		"source": ""
	},
	{
		"id": "java-application-security-9",
		"question": "What attributes would you include in a log statement for a failed login attempt?",
		"correct_answer": "Timestamp, application name, host identifier, source IP address, username, and event type",
		"incorrect_answers": [
			"Timestamp, application name, host identifer, source IP address, username, browser language, request duration, and password length",
			"Timestamp, application name, username, and event type",
			"Timestamp, source IP address, and username"
		],
		"source": ""
	},
	{
		"id": "java-application-security-10",
		"question": "You need to read a subset of a large XML document. Why would either a push parser or a pull parser be better suited for the task?",
		"correct_answer": "A pull parser allows you to filter and ignore unneeded elements.",
		"incorrect_answers": [
			"A pull parser loads the entire document in memory.",
			"A push parser loads the entire document in memory.",
			"A push parser allows you to not define callbacks to filter and ignore unneeded elements."
		],
		"source": ""
	},
	{
		"id": "java-application-security-11",
		"question": "What is the simplest way to ensure that a resource closes given that resource implements java.lang.AutoCloseable?",
		"correct_answer": "Implement a try-with-resources construct",
		"incorrect_answers": [
			"Wrap the resource with OverrideAndClose",
			"Call .close on the resource in a finally block",
			"Assign responsibility to the Java Virtual Machine (JVM)"
		],
		"source": ""
	},
	{
		"id": "java-application-security-12",
		"question": "How would you ensure that only external entities that reference safe domains are resolved when parsing an XML document?",
		"correct_answer": "Use an EntityResolver to implement a whitelist of safe domains",
		"incorrect_answers": [
			"Validate the XML schema before parsing",
			"Disable external entities on the XML parser",
			"Create a preprocessor that removes unsafe domains from the XML document"
		],
		"source": ""
	},
	{
		"id": "java-application-security-13",
		"question": "The servlet spec states that a transport guarantee setting of CONFIDENTIAL means that data will be sent confidentially. In practice, how does the aforementioned translate?",
		"correct_answer": "The container requires TLS for the configured URIs.",
		"incorrect_answers": [
			"The container signs the configured URIs.",
			"The container requires mutual authentication for the configured URIs.",
			"The container rejects GETs for the configured URIs."
		],
		"source": ""
	},
	{
		"id": "java-application-security-14",
		"question": "What does a TrustManager do?",
		"correct_answer": "It uses a trust store to determine whether a credential should be trusted.",
		"incorrect_answers": [
			"It uses a trust store to determine which hosts are trusted.",
			"It functions as a certificate authority.",
			"It is used to sign code."
		],
		"source": ""
	},
	{
		"id": "java-application-security-15",
		"question": "There is an error in the immutable class below that causes it to be mutable. What would you do to resolve the error? <div class=\"code\"><p>public final class Immutable {</p><p>&nbsp; private final String name;</p><p>&nbsp; private final int[] data;</p><p>&nbsp; public Immutable(String name, int[] data) {</p><p>&nbsp; &nbsp; this.name = name;</p><p>&nbsp; &nbsp; this.data = Arrays.copyOf(data, data.length);</p><p>&nbsp; }</p><p>&nbsp; public String getName() {</p><p>&nbsp; &nbsp; return name;</p><p>&nbsp; }</p><p>&nbsp; public int[] getData() {</p><p>&nbsp; &nbsp; return data;</p><p>&nbsp; }</p><p>}</p></div>",
		"correct_answer": "Modify getData() to return a defensive copy",
		"incorrect_answers": [
			"Change the class from public to private",
			"Modify getName() to return a defensive copy",
			"Add the final keyword to the getName() method"
		],
		"source": ""
	},
	{
		"id": "java-application-security-16",
		"question": "You need to add a new certificate authority to a Java deployment, but the cacerts keystore is password protected. No one has ever set or changed the password. What would you do to add the certificate authority?",
		"correct_answer": "Try the default Java keystore password, \"changeit\".",
		"incorrect_answers": [
			"Try the default Java keystore password, \"java\".",
			"Copy the cacerts keystore file from another Java deployment.",
			"Reinstall Java to reset the cacerts password."
		],
		"source": ""
	},
	{
		"id": "java-application-security-17",
		"question": "You are upgrading to Spring Security 5, but the existing passwords in your database do not possess the encoding prefix that Spring Security 5 will add for future registrations. What would you do to prevent downtime during upgrades?",
		"correct_answer": "Generate a DelegatingPasswordEncoder instance using PasswordEncoders and use setDefaultPasswordEncoderForMatches, which will indicate the encoder to use when there is no prefix",
		"incorrect_answers": [
			"Update the UserDetailsService to query a \"password upgrade required\" field, return null if an upgrade is required, which indicates upstream that the user's credentials require an update before the user can login, and redirect that user to the update password page",
			"Create a PasswordController with admin access that will iterate through all users in the background and update their passwords and hit the endpoint",
			"Expose a NoOpPasswordEncoder as a bean"
		],
		"source": ""
	},
	{
		"id": "java-application-security-18",
		"question": "What is incorrect in the following custom permission that contains multiple actions? <div class=\"code\"><p>public class MyPermission extends BasicPermission {</p><p>&nbsp; Set<String> actions = new HashSet<>();</p><p>&nbsp; public MyPermission(String name, String actions) {</p><p>&nbsp; &nbsp; super(name);</p><p>&nbsp; &nbsp; this.actions = new HashSet<>(Arrays.asList(actions.split(\",\")));</p><p>&nbsp; }</p><p>&nbsp; public String getActions() {</p><p>&nbsp; &nbsp; return  actions.stream().collect(Collectors.joining(\",\"));</p><p>&nbsp;}</p><p>}</p></div>",
		"correct_answer": "Calls to getActions do not consistently return the values in the same order, which breaks the APIs contract.",
		"incorrect_answers": [
			"Calls to getActions are slow, which breaks the APIs contract.",
			"Calls to getActions might return an empty string, which breaks the APIs contract.",
			"Calls to getActions might return null, which breaks the APIs contract."
		],
		"source": ""
	},
	{
		"id": "java-application-security-19",
		"question": "An application server has been configured to require mutual TLS authentication. Mutual TLS is functional, but the server also accepts client connections that do not present a certificate. What's the most likely cause?",
		"correct_answer": "The server's socket was configured with setWantClientAuth() instead of setNeedClientAuth().",
		"incorrect_answers": [
			"It's up to the client to request mutual TLS authentication.",
			"The server is using an older version of TLS that does not require mutual authentication.",
			"The client's socket was configured with setWantServerAuth() instead of setNeedServerAuth()."
		],
		"source": ""
	},
	{
		"id": "java-application-security-20",
		"question": "You are writing a data class that will be accessed by multiple threads. How would you ensure the data class is threadsafe while also minimizing memory usage?",
		"correct_answer": "By making the data class immutable",
		"incorrect_answers": [
			"By copying the data object in each thread",
			"By making the data class private",
			"By making the data class a singleton"
		],
		"source": ""
	},
	{
		"id": "java-application-security-21",
		"question": "For what purpose would you use an EntityResolver as an XXE defense?",
		"correct_answer": "To restrict external entity resolution to whitelisted domains",
		"incorrect_answers": [
			"To log all external entity resolutions",
			"To ensure connections are only conducted over the HTTPS protocol",
			"To block specific domains from being used in entity resolution"
		],
		"source": ""
	},
	{
		"id": "java-application-security-22",
		"question": "How is the serialization and deserialization of Enums different from that of other objects?",
		"correct_answer": "Enums are automatically serializable.",
		"incorrect_answers": [
			"Both need to be declared serializable.",
			"Any fields on the Enum are null on deserialization.",
			"Enums cannot be serialized."
		],
		"source": ""
	},
	{
		"id": "java-application-security-23",
		"question": "Why is it insecure to trust the Content-Type header when you determine file types",
		"correct_answer": "The header can be supplied by the user.",
		"incorrect_answers": [
			"The header might have a CRLF injection.",
			"The Accept header is the more semantically correct header to use.",
			"There are content types the server might not understand."
		],
		"source": ""
	},
	{
		"id": "java-application-security-24",
		"question": "You configured your application to grant the authority of ADMIN to admin users and you configured Spring Security to authorize requests with the expression hasRole('ADMIN'). However, no one reaches the admin pages. What is the most likely problem?",
		"correct_answer": "There is a mismatch between the name of the authority Spring Security searches for and the name of the authority that the UserDetailsService grants.",
		"incorrect_answers": [
			"The application fails to grant the ADMIN authority in the UserDetailsService implementation.",
			"The authorize requests ant mappings map the admin URLs to another authority expression.",
			"The application's admin pages are not mapped to Spring MVC endpoints."
		],
		"source": ""
	},
	{
		"id": "java-application-security-25",
		"question": "Which is the most secure way to validate a redirect?",
		"correct_answer": "Select the redirect uniform resource identifier (URI) from a whitelist",
		"incorrect_answers": [
			"Check the host; redirect only if it starts with http://",
			"Remove the scheme, remove the host, and sanitize the uniform resource identifier (URI)",
			"Remove the scheme, remove the host, and encode the uniform resource identifier (URI)"
		],
		"source": ""
	},
	{
		"id": "java-application-security-26",
		"question": "What occurs if code calls toLowerCase without passing the desired locale as a parameter?",
		"correct_answer": "Some characters may incorrectly map from uppercase to lowercase.",
		"incorrect_answers": [
			"The code may not compile on operating systems outside of the United States.",
			"The code might throw an UnsupportedEncodingException.",
			"Some characters may map to unsupported code points."
		],
		"source": ""
	},
	{
		"id": "java-application-security-27",
		"question": "If CSRF protection is disabled and a site is otherwise secure, which of the following is most likely to succeed?",
		"correct_answer": "A remote attacker could POST information as if it were the victim.",
		"incorrect_answers": [
			"A remote attacker could read the victim's HTTP responses.",
			"A remote attacker could persist arbitrary Javascript to the database.",
			"A remote attacker could steal the victim's session ID."
		],
		"source": ""
	},
	{
		"id": "java-application-security-28",
		"question": "You need to read a file into memory as ASCII. How would you configure the reader to complain when it finds a character that it cannot map?",
		"correct_answer": "Configure a CharsetDecoder with onUnmappableCharacter(REPORT), wrap a FileInputStream in an InputStreamReader, and supply the decoder",
		"incorrect_answers": [
			"Specify -Dfile.encoding=ASCII and -Dfile.encoding.unmappable=REPORT from the command line",
			"Configure a CharsetDecoder with onUnmappableCharacter(REPORT), create a FileReader, and supply the decoder",
			"Configure a CharsetEncoder with onUnmappableCharacter(REPORT), wrap a FileInputStream in an InputStreamReader, and supply the decoder"
		],
		"source": ""
	},
	{
		"id": "java-application-security-29",
		"question": "Why does using a database connection pooler improve the security posture of an application?",
		"correct_answer": "The use of a database connection pooler mitigates denial of service attacks.",
		"incorrect_answers": [
			"The use of a database connection pooler mitigates remote code execution attacks.",
			"The use of a database connection pooler mitigates directory traversal attacks.",
			"The use of a database connection pooler mitigates SQL injection attacks."
		],
		"source": ""
	},
	{
		"id": "java-application-security-31",
		"question": "If a String is interned, what is possible with that String that is not possible with other Strings?",
		"correct_answer": "The String can be compared using == in addition to .equals().",
		"incorrect_answers": [
			"The String can be subclassed.",
			"The String can be garbage collected.",
			"The String can be converted to a char array."
		],
		"source": ""
	},
	{
		"id": "java-application-security-34",
		"question": "Why should passwords NOT be stored in String variables?",
		"correct_answer": "Strings place the information into the String pool.",
		"incorrect_answers": [
			"Strings are UTF-16 encoded.",
			"Most security libraries require a char[] array or byte[] array for hashing.",
			"Strings are immutable."
		],
		"source": ""
	},
	{
		"id": "java-application-security-36",
		"question": "If you consider the principle of least privilege, what is the preferred way to create a file in Java?",
		"correct_answer": "Files.write(path, bytes, StandardOpenOption.CREATE_NEW).toFile().setReadOnly();",
		"incorrect_answers": [
			"Files.write(path, bytes).toFile().setReadOnly()",
			"Files.write(path, bytes, StandardOpenOption.CREATE).toFile().setReadOnly()",
			"Files.write(path, bytes)"
		],
		"source": ""
	},
	{
		"id": "java-application-security-37",
		"question": "What is the difference between running with the default security manager and running without the default security manager?",
		"correct_answer": "When you use the default security manager, risky operations are disallowed, but can be granted through a policy file. Without a security manager, permissions are not checked for any operation.",
		"incorrect_answers": [
			"The two are roughly equivalent. Risky operations are granted by default, but can be revoked through a policy file.",
			"The default security manager only allows access to a handful of system properties, but other permissions can be granted through a policy file. Without a security manager, permissions are not checked for any operation.",
			"There is no default security manager as the application must define its own policy file in order to use a security manager."
		],
		"source": ""
	},
	{
		"id": "java-application-security-38",
		"question": "Which is a valid Java KeyStore format (JKS)?",
		"correct_answer": "JKS",
		"incorrect_answers": [
			"Diagnostic Agent (RDA)",
			"PCSK12",
			"PRM"
		],
		"source": ""
	},
	{
		"id": "java-application-security-39",
		"question": "Why should you password protect KeyStores?",
		"correct_answer": "To restrict access to private keys and the list of trusted CAs",
		"incorrect_answers": [
			"It is not important to password protect KeyStores",
			"To prevent the KeyStore from being copied",
			"To prevent unauthorized read access to the list of trusted CAs"
		],
		"source": ""
	},
	{
		"id": "java-application-security-40",
		"question": "Which method must you set with a positive value so cookies last for a fixed time value and not only for the current session?",
		"correct_answer": "setMaxAge()",
		"incorrect_answers": [
			"setTimePeriod()",
			"setTimeToLive()",
			"setExpiryTime()"
		],
		"source": ""
	},
	{
		"id": "java-application-security-41",
		"question": "What is the difference between calling Cookie#setMaxAge(0) and Cookie#setMaxAge(-1)?",
		"correct_answer": "setMaxAge(0) expires the cookie and setMaxAge(-1) makes it a session cookie.",
		"incorrect_answers": [
			"setMaxAge(-1) expires the cookie and setMaxAge(0) makes it a session cookie.",
			"setMaxAge(0) expires the cookie, while setMaxAge(-1) is not valid usage.",
			"It depends on which browser sent the request."
		],
		"source": ""
	},
	{
		"id": "java-application-security-42",
		"question": "Which log format is resistent to log injection?",
		"correct_answer": "JSON",
		"incorrect_answers": [
			"Comma delimited",
			"Timestamped",
			"Quoted variables"
		],
		"source": ""
	},
	{
		"id": "java-application-security-44",
		"question": "What is correct about asymmetric cryptography?",
		"correct_answer": "It performs slower encryption than the symmetric cryptography.",
		"incorrect_answers": [
			"It uses fewer resources compared to symmetric cryptography.",
			"It always produces a smaller cipher text than the actual plain text.",
			"It uses only one key to perform both data encryption and decryption."
		],
		"source": ""
	},
	{
		"id": "java-application-security-45",
		"question": "Your browser is vulnerable to sending cookies over unencrypted channels. To overcome this issue, you set up a secure attribute by mentioning <httpCookies requireSSL=\"true\" /> within a newly created Web.config file. The cookies are still transmitting over unencrypted HTTP networks, however. How else can you protect them?",
		"correct_answer": "<p>Delete the Web.config file and add the following in the web.xml file:</p><div class=\"codeAnswer\"><p>&lt;session-config&gt;</p><p>&nbsp;&nbsp;&lt;cookie-config&gt;</p><p>&nbsp;&nbsp;&lt;secure&gt;true&lt;/secure&gt;</p><p>&nbsp;&nbsp;&lt;/cookie-config&gt;</p><p>&lt;/session-config&gt;</p></div>",
		"incorrect_answers": [
			"<p>Delete the Web.config file and add the following in the web.xml file:</p><p>session.cookie_secure = true</p>",
			"<p>Replace the code in the Web.config file with the following code:</p><p><div class=\"codeAnswer\">session.cookie_secure = true</div></p>",
			"<p>Replace the code in the Web.config file with the following code: </p><div class=\"codeAnswer\"><p>String sessid = request.getSession().getId(); </p><p>response.setHeader(\"SET-COOKIE\", \"JSESSIONID=\" + sessid + \"; secure\");</p></div>"
		],
		"source": ""
	},
	{
		"id": "java-application-security-47",
		"question": "Which is the syntax of XML schema facets?",
		"correct_answer": "<div class=\"codeAnswer\"><p>&lt;xs:restriction base=\"...\"&gt;</p><p> ...</p><p>&lt;/xs:restriction&gt;</p></div>",
		"incorrect_answers": [
			"<div class=\"codeAnswer\"><p>&lt;xs:mask base=\"...\"&gt;</p><p> ...</p><p>&lt;/xs:mask&gt;</p></div>",
			"<div class=\"codeAnswer\"><p>&lt;xs:facet base=\"...\"&gt;</p><p> ...</p><p>&lt;/xs:facet&gt;</p></div>",
			"<div class=\"codeAnswer\"><p>&lt;xs:resistance base=\"...\"&gt;</p><p> ...</p><p>&lt;/xs:resistance&gt;</p></div>"
		],
		"source": ""
	},
	{
		"id": "java-application-security-48",
		"question": "You created a custom permission myPermission that, when assigned to a user, permits FilePermission, ServicePermission, and SocketPermission. On testing, a user has the first two permissions but is missing the SocketPermission. What could be the possible cause for this issue?",
		"correct_answer": "The checkPermission() call failed because myPermission is not implying the SocketPermission class.",
		"incorrect_answers": [
			"The assignPermission() call failed because myPermission is not implying the SocketPermission class.",
			"myPermission could only grant a few permissions because it is not implying the Permission class.",
			"myPermission could only grant a few permissions because it is not implying the BasicPermission class. "
		],
		"source": ""
	},
	{
		"id": "java-application-security-49",
		"question": "Your application experienced a breach. The application uses a stateless authentication scheme that stores the user identity in a cookie. In order to protect against tampering, the cookie includes the hash of the user's identity information for verification. What would you do to resolve the system failure?",
		"correct_answer": "Sign the cookie value to prevent tampering",
		"incorrect_answers": [
			"Base64 encode the user identity information to better obfuscate the information",
			"Generate a session ID upon user login and save that as a cookie instead",
			"There are steps required for resolution"
		],
		"source": ""
	},
	{
		"id": "java-application-security-50",
		"question": "<p>What is the problem with the following configuration?</p><div class=\"code\">http.authorizeRequests().antMatchers(\"/**\").authenticated()    .antMatchers(\"*.css\").permitAll();</div>",
		"correct_answer": "The configuration intends to expose *.css as public, but it fails because the matchers are out of order.",
		"incorrect_answers": [
			"The configuration intends to expose *.css as public, but this is not as secure as requiring authentication.",
			"The configuration intends to expose *.css as public, but it fails because ant does not support file extensions.",
			"The configuration intends to expose *.css as public, but it would be more secure to implement before .authorizeRequests."
		],
		"source": ""
	},
	{
		"id": "java-application-security-51",
		"question": "You must read a file into memory as American Standard Code for Information Interchange (ASCII). How would you configure the reader to complain when it finds a character that it cannot map?",
		"correct_answer": "Configure a CharsetDecoder with onUnmappableCharacter(REPORT), wrap a FileInputStream in an InputStreamReader, and supply the decoder.",
		"incorrect_answers": [
			"Configure a CharsetDecoder with onUnmappableCharacter(REPORT), create a FileReader, and supply the decoder.",
			"Configure a CharsetEncoder with onUnmappableCharacter(REPORT), wrap a FileInputStream in an InputStreamReader, and supply the decoder.",
			"Specify -Dfile.encoding=ASCII and -Dfile.encoding.unmappable=REPORT from the command line."
		],
		"source": ""
	},
	{
		"id": "java-application-security-53",
		"question": "In the principle of least privilege, how should you create a file in Java?",
		"correct_answer": "Files.write(path, bytes, StandardOpenOption.CREATE_NEW).toFile().setReadOnly();",
		"incorrect_answers": [
			"Files.write(path, bytes, StandardOpenOption.CREATE).toFile().setReadOnly()",
			"Files.write(path, bytes)",
			"Files.write(path, bytes).toFile().setReadOnly()"
		],
		"source": ""
	},
	{
		"id": "java-application-security-54",
		"question": "Images uploaded into a web application are encrypted with AES in CTR mode. A single bit key and IV are used to encrypt all images. What is the problem with the encryption?",
		"correct_answer": "Each image must be encrypted with a unique IV.",
		"incorrect_answers": [
			"The encrypted image will look similar to the original.",
			"Each image must be encrypted with a unique key.",
			"Images should not be encrypted in CTR mode."
		],
		"source": ""
	},
	{
		"id": "java-application-security-55",
		"question": "For a 192-bit key Advanced Encryption Standard (AES) algorithm, how many rounds are required to convert plaintext into its corresponding cipher text?",
		"correct_answer": "12",
		"incorrect_answers": [
			"14",
			"16",
			"10"
		],
		"source": ""
	},
	{
		"id": "java-application-security-56",
		"question": "Which syntax verifies a signed Java Archive (JAR) file?",
		"correct_answer": "jarsigner -verify jarFile",
		"incorrect_answers": [
			"jarverify jarFile",
			"jar -verify jarFile",
			"corejar -verify jarFile"
		],
		"source": ""
	},
	{
		"id": "java-application-security-57",
		"question": "If Class B calls Class C, and Class C contains a doPrivileged block, with which class's permissions will the code in the doPrivileged block perform?",
		"correct_answer": "Class C's permissions",
		"incorrect_answers": [
			"The union of Class C's and Class B's permissions",
			"Class B's permissions",
			"The intersection of Class C's and Class B's permissions"
		],
		"source": ""
	},
	{
		"id": "java-application-security-58",
		"question": "What do you do to retrieve an underlying object with SignedObject?",
		"correct_answer": "Call the verify method with the appropriate key and signature and call getObject to retrieve the object if it returns true",
		"incorrect_answers": [
			"Call getObject to retrieve the object",
			"Call getObjectAndVerify to retrieve and verify the object",
			"Call the verify method with the appropriate key and signature and call getObject to retrieve the object If it does not throw an exception"
		],
		"source": ""
	},
	{
		"id": "java-application-security-59",
		"question": "<p>Once authentication is successful, an application runs the following set of instructions:</p><div class=\"code\"><p>String redirectTo = request.getParameter(\"redirect_to\");</p><p>response.sendRedirect(redirectTo);</p></div><p>How might an attacker exploit the instructions?</p>",
		"correct_answer": "Using a phishing attack with open redirect",
		"incorrect_answers": [
			"Using a phishing attack with response splitting",
			"Using a phishing attack with cross-site scripting (XSS)",
			"Using a phishing attack in conjunction with a zero-day attack"
		],
		"source": ""
	},
	{
		"id": "java-application-security-60",
		"question": "You have the keywords for four different websites' URLs. Which website must you give priority for its URL encoding?",
		"correct_answer": "Website 2 URL keywords: io!j and ui~n\\",
		"incorrect_answers": [
			"Website 1 URL keywords: k.g3j and -lkjd4 ",
			"Website 3 URL keywords: 45678 and 32479 ",
			"Website 4 URL keywords: mvd_mvd and lop5_"
		],
		"source": ""
	},
	{
		"id": "java-application-security-61",
		"question": "What is the access modifier for the KeyManagerFactory constructor?",
		"correct_answer": "protected",
		"incorrect_answers": [
			"static",
			"private",
			"public"
		],
		"source": ""
	},
	{
		"id": "java-application-security-62",
		"question": "When would you rely on symmetric keys rather than asymmetric keys?",
		"correct_answer": "When hashing",
		"incorrect_answers": [
			"When working with cryptocurrencies",
			"When using digital signatures",
			"When using encrypted emails"
		],
		"source": ""
	},
	{
		"id": "java-application-security-63",
		"question": "How would you read a symmetric Advanced Encryption Standard (AES) key from a file into memory?",
		"correct_answer": "<div class=\"codeAnswer\"><p>Path aesKeyPath = new File(\"aesKey\").toPath();</p><p>byte[] keyBytes = Files.readAllBytes(aesKeyPath);</p><p>SecretKeySpec aesKey = new SecretKeySpec(keyBytes, \"AES\");</p></div>",
		"incorrect_answers": [
			"<div class=\"codeAnswer\"><p>Path aesKeyPath = new File(\"aesKey\").toPath();</p><p>Key aesKey = new Key(aesKeyPath, \"AES\");</p></div>",
			"<div class=\"codeAnswer\"><p>Path aesKeyPath = new File(\"aesKey\").toPath();</p><p>SecretKeySpec aesKey = new SecretKeySpec(aesKeyPath, \"AES\");</p></div>",
			"<div class=\"codeAnswer\"><p>Path aesKeyPath = new File(\"aesKey\").toPath();</p><p>byte[] keyBytes = Files.readAllBytes(aesKeyPath);</p>SecretKeySpec aesKey = new SecretKeySpec(keyBytes.getEncoded(), \"AES\");</div>"
		],
		"source": ""
	},
	{
		"id": "java-application-security-64",
		"question": "Why would you use an EntityResolver as an XML external entity (XXE) defense?",
		"correct_answer": "To restrict external entity resolution to allowlisted domains",
		"incorrect_answers": [
			"To log all external entity resolutions",
			"To block specific domains from being used in entity resolution",
			"To ensure connections are only conducted over the HTTPS protocol"
		],
		"source": ""
	},
	{
		"id": "java-application-security-65",
		"question": "After configuring an application to use hostname verification on Transport Layer Security (TLS) requests, the app sometimes experiences SSLHandshakeException errors. The errors always occur when connecting to a server with a self-signed certificate. What is the most likely cause?",
		"correct_answer": "The self-signed certificates are not included in the trust store.",
		"incorrect_answers": [
			"The self-signed certificates are not included in the key store.",
			"You have not configured hostname verification.",
			"You cannot use hostname verification with self-signed certificates."
		],
		"source": ""
	},
	{
		"id": "java-application-security-66",
		"question": "Which class can create hard links?",
		"correct_answer": "java.nio.file.LinkPermission ",
		"incorrect_answers": [
			"javax.net.ssl.SSLPermission",
			"java.net.URLPermission",
			"java.net.NetPermission"
		],
		"source": ""
	},
	{
		"id": "java-application-security-68",
		"question": "A Java web application uses the c3p0 connection pooler, which is set to 20 maximum connections. During a test, the first 20 requests are sent and they respond correctly. The 21st request hangs, however. What is the likely problem?",
		"correct_answer": "The application fails to wrap its connection instances in a try-with-resources.",
		"incorrect_answers": [
			"The application fails to flush its connections instances after each use.",
			"The application wraps its connection instances in synchronized blocks.",
			"The application needs more concurrent connections."
		],
		"source": ""
	},
	{
		"id": "java-application-security-69",
		"question": "<p>You find a cross-site scripting vulnerability that involves the username on an application's profile page. The username is placed within a div tag. The input sanitization process contains two steps.</p><p>1. The following special characters are removed from the string: & < > \" ' /;</p><p>2. The string is normalized.</p><p>What is wrong with the input sanitization process?</p>",
		"correct_answer": "You should normalize and then compare the string against an allowlist of accepted characters.",
		"incorrect_answers": [
			"You should standardize and then compare the string against a denylist of accepted characters. ",
			"The JavaScript on the edit profile page should validate the username before sending it to the server.",
			"Step 1 does not remove all special characters that are relevant in HTML context."
		],
		"source": ""
	},
	{
		"id": "java-application-security-74",
		"question": "What is a defensive copy?",
		"correct_answer": "A copy of a mutable object",
		"incorrect_answers": [
			"A wrapper class",
			"A copy of every element",
			"A copy of an immutable object"
		],
		"source": ""
	},
	{
		"id": "java-application-security-75",
		"question": "What is the base interface for keys in Java?",
		"correct_answer": "Key",
		"incorrect_answers": [
			"KeyInfo",
			"PrivateKey",
			"Secret"
		],
		"source": ""
	},
	{
		"id": "java-application-security-76",
		"question": "If you do not specify character encoding, which encoding will Charset.defaultCharset return?",
		"correct_answer": "The default encoding of the underlying operating system ",
		"incorrect_answers": [
			"16-bit Unicode Transformation Format (UTF-16)",
			"Windows-1252",
			"8-bit Unicode Transformation Format (UTF-8)"
		],
		"source": ""
	},
	{
		"id": "java-application-security-77",
		"question": "Client A talks to Service B using serialization. A given transport object is modified to contain a new nullable field. Upon updating service B only, communication breaks when client A sends requests to service B using the transport object. What is the most likely explanation?",
		"correct_answer": "The transport object is lacking a serialVersionUID field.",
		"incorrect_answers": [
			"The transport object must implement writeObject.",
			"The transport object must implement readObject.",
			"Java serialization requires all fields be specified."
		],
		"source": ""
	}
]